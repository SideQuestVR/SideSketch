// Copyright 2020 The Tilt Brush Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public class SteamVR_Input_ActionSet_TiltBrush : Valve.VR.SteamVR_ActionSet
    {
        
        public virtual SteamVR_Action_Pose Pose
        {
            get
            {
                return SteamVR_Actions.tiltBrush_Pose;
            }
        }
        
        public virtual SteamVR_Action_Single RI_Trigger
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_Trigger;
            }
        }
        
        public virtual SteamVR_Action_Vector2 RI_Thumbstick
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_Thumbstick;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_ThumbstickTouch
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_ThumbstickTouch;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_GripBinary
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_GripBinary;
            }
        }
        
        public virtual SteamVR_Action_Single RI_GripAnalog
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_GripAnalog;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_MenuButton
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_MenuButton;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_PadTouch
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_PadTouch;
            }
        }
        
        public virtual SteamVR_Action_Vector2 RI_PadDirectional
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_PadDirectional;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_PadClick
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_PadClick;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_PrimaryButton
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_PrimaryButton;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_PrimaryButtonTouch
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_PrimaryButtonTouch;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_SecondaryButton
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_SecondaryButton;
            }
        }
        
        public virtual SteamVR_Action_Boolean RI_SecondaryButtonTouch
        {
            get
            {
                return SteamVR_Actions.tiltBrush_RI_SecondaryButtonTouch;
            }
        }
        
        public virtual SteamVR_Action_Vibration Haptic
        {
            get
            {
                return SteamVR_Actions.tiltBrush_Haptic;
            }
        }
    }
}
